{
  "name": "@prettygood/database",
  "version": "1.0.0",
  "description": "PostgreSQL database schema and migrations for prettygood.music",
  "main": "index.js",
  "scripts": {
    "migrate": "chmod +x ./run-migrations.sh && ./run-migrations.sh",
    "migrate:dev": "DB_HOST=localhost DB_PORT=5432 DB_NAME=prettygood DB_USER=postgres DB_PASSWORD=postgres ./run-migrations.sh",
    "reset-db": "chmod +x ./scripts/reset-database.sh && ./scripts/reset-database.sh",
    "reset-db:dev": "DB_HOST=localhost DB_PORT=5432 DB_NAME=prettygood DB_USER=postgres DB_PASSWORD=postgres ./scripts/reset-database.sh",
    "setup-fresh-db": "chmod +x ./scripts/setup-fresh-database.sh && ./scripts/setup-fresh-database.sh",
    "setup-fresh-db:dev": "DB_HOST=localhost DB_PORT=5432 DB_NAME=prettygood DB_USER=postgres DB_PASSWORD=postgres ./scripts/setup-fresh-database.sh",
    "create-migration": "node ./scripts/create-migration.js",
    "create-seed": "node ./scripts/create-seed.js",
    "test:db": "chmod +x ./scripts/run-tests.sh && ./scripts/run-tests.sh",
    "test:db:dev": "DB_HOST=localhost DB_PORT=5432 DB_NAME=prettygood DB_USER=postgres DB_PASSWORD=postgres ./scripts/run-tests.sh",
    "test:db:structure": "npm run test:db:dev -- -p \"structure/*.sql\"",
    "test:db:functions": "npm run test:db:dev -- -p \"functions/*.sql\"",
    "test:db:security": "npm run test:db:dev -- -p \"security/*.sql\"",
    "test:db:api": "npm run test:db:dev -- -p \"api/*.sql\"",
    "test:db:integrity": "npm run test:db:dev -- -p \"integrity/*.sql\"",
    "test:db:verbose": "npm run test:db:dev -- -v",
    
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:migrate": "chmod +x ./scripts/run-migrations-docker.sh && ./scripts/run-migrations-docker.sh",
    "docker:setup-fresh-db": "chmod +x ./scripts/setup-fresh-database-docker.sh && ./scripts/setup-fresh-database-docker.sh",
    "docker:test": "chmod +x ./scripts/run-tests-docker.sh && ./scripts/run-tests-docker.sh",
    "docker:test:structure": "npm run docker:test -- -p \"structure/*.sql\"",
    "docker:test:functions": "npm run docker:test -- -p \"functions/*.sql\"",
    "docker:test:security": "npm run docker:test -- -p \"security/*.sql\"",
    "docker:test:api": "npm run docker:test -- -p \"api/*.sql\"",
    "docker:test:integrity": "npm run docker:test -- -p \"integrity/*.sql\"",
    "docker:test:verbose": "npm run docker:test -- -v",
    "docker:shell": "docker-compose exec postgres bash",
    "docker:pgadmin": "echo 'PgAdmin is available at http://localhost:5050 with login admin@prettygood.music / admin'",
    "docker:postgrest": "echo 'PostgREST is available at http://localhost:3000'",
    "docker:reset-and-test": "npm run docker:setup-fresh-db && npm run docker:test",
    "docker:all": "npm run docker:build && npm run docker:up && npm run docker:setup-fresh-db && npm run docker:test && npm run docker:postgrest && npm run docker:pgadmin",
    
    "generate-types": "chmod +x ./scripts/generate-types.sh && ./scripts/generate-types.sh",
    "generate-types:advanced": "USE_ADVANCED=true chmod +x ./scripts/generate-types.sh && ./scripts/generate-types.sh",
    "generate-types:docker": "USE_DOCKER=true chmod +x ./scripts/generate-types.sh && ./scripts/generate-types.sh",
    "generate-types:advanced:docker": "USE_DOCKER=true USE_ADVANCED=true chmod +x ./scripts/generate-types.sh && ./scripts/generate-types.sh",
    "setup-and-generate": "npm run setup-fresh-db:dev && npm run generate-types:advanced",
    "docker:setup-and-generate": "npm run docker:setup-fresh-db && npm run generate-types:advanced:docker"
  },
  "keywords": [
    "postgresql",
    "migrations",
    "database",
    "schema"
  ],
  "author": "prettygood.music team",
  "license": "ISC"
}
