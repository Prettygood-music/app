version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      target: development
    ports:
      - "5173:5173"
      - "6006:6006"
    volumes:
      - ./app:/app/app
      - ./common:/app/common
      - ./database:/app/database
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./package.json:/app/package.json
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3333
      - VITE_ENVIRONMENT=development
      - VITE_ENABLE_ANALYTICS=false
      - VITE_WALLET_NETWORK=testnet
    depends_on:
      - postgres
      - redis
    command: pnpm run dev -- --host 0.0.0.0
    working_dir: /app/app

  storybook:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      target: development
    ports:
      - "6006:6006"
    volumes:
      - ./app:/app/app
      - ./common:/app/common
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./package.json:/app/package.json
    environment:
      - NODE_ENV=development
    command: pnpm run storybook -- --host 0.0.0.0
    working_dir: /app/app
    depends_on:
      - app

  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile
      target: development
    ports:
      - "3333:3333"
    volumes:
      - ./server:/app/server
      - ./common:/app/common
      - ./database:/app/database
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./package.json:/app/package.json
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/prettygood
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev_secret_do_not_use_in_production
      - CORS_ORIGIN=http://localhost:5173
    depends_on:
      - postgres
      - redis
    working_dir: /app/server

  postgres:
    build:
      context: ./database/docker
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database:/app:ro  # Mount database directory as read-only
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: prettygood
      POSTGRES_TEST_DB: "true"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgrest:
    image: postgrest/postgrest:latest
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@postgres:5432/prettygood
      PGRST_DB_SCHEMA: prettygood
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: "dev_secret_do_not_use_in_production"
      PGRST_DB_POOL: 10
      PGRST_SERVER_PROXY_URI: "http://localhost:3000"
    depends_on:
      postgres:
        condition: service_healthy

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@prettygood.music
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin:/var/lib/pgadmin
      
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  database:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      target: development
    volumes:
      - ./database:/app/database
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./package.json:/app/package.json
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=prettygood
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      postgres:
        condition: service_healthy
    working_dir: /app/database

volumes:
  postgres_data:
  redis_data:
  pgadmin:
