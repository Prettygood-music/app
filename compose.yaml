version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      target: development
    ports:
      - "5173:5173"
      - "6006:6006"
    volumes:
      - ./app:/app/app
      - ./common:/app/common
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./package.json:/app/package.json
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3333
      - VITE_ENVIRONMENT=development
      - VITE_ENABLE_ANALYTICS=false
      - VITE_WALLET_NETWORK=testnet
    depends_on:
      - postgres
      - redis
    command: pnpm run dev -- --host 0.0.0.0
    working_dir: /app/app

  storybook:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      target: development
    ports:
      - "6006:6006"
    volumes:
      - ./app:/app/app
      - ./common:/app/common
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./package.json:/app/package.json
    environment:
      - NODE_ENV=development
    command: pnpm run storybook -- --host 0.0.0.0
    working_dir: /app/app
    depends_on:
      - app

  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile
      target: development
    ports:
      - "3333:3333"
    volumes:
      - ./server:/app/server
      - ./common:/app/common
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./package.json:/app/package.json
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/prettygood_dev
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev_secret_do_not_use_in_production
      - CORS_ORIGIN=http://localhost:5173
    depends_on:
      - postgres
      - redis
    working_dir: /app/server

  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=prettygood_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgrest:
    image: postgrest/postgrest
    ports:
      - "3000:3000"
    environment:
      - PGRST_DB_URI=postgres://postgres:postgres@postgres:5432/prettygood_dev
      - PGRST_DB_SCHEMA=public,prettygood
      - PGRST_DB_ANON_ROLE=anon
      - PGRST_JWT_SECRET=dev_secret_do_not_use_in_production
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:3000
    depends_on:
      - postgres

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=dracula
    depends_on:
      - postgres

volumes:
  postgres_data:
  redis_data: