version: '3.9'

services:
  app-test:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      target: development
    volumes:
      - ./app:/app/app
      - ./common:/app/common
      - app_node_modules:/app/app/node_modules
      - common_node_modules:/app/common/node_modules
    environment:
      - NODE_ENV=test
      - VITE_API_URL=http://server:3333
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/prettygood_test
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    command: pnpm run test
    working_dir: /app/app

  app-unit-test:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      target: development
    volumes:
      - ./app:/app/app
      - ./common:/app/common
      - app_node_modules:/app/app/node_modules
      - common_node_modules:/app/common/node_modules
    environment:
      - NODE_ENV=test
    command: pnpm run test:unit
    working_dir: /app/app

  app-e2e-test:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      target: development
    volumes:
      - ./app:/app/app
      - ./common:/app/common
      - app_node_modules:/app/app/node_modules
      - common_node_modules:/app/common/node_modules
    environment:
      - NODE_ENV=test
      - VITE_API_URL=http://server:3333
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/prettygood_test
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
      - server
    command: pnpm run test:e2e
    working_dir: /app/app

  app-storybook-test:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      target: development
    volumes:
      - ./app:/app/app
      - ./common:/app/common
      - app_node_modules:/app/app/node_modules
      - common_node_modules:/app/common/node_modules
    environment:
      - NODE_ENV=test
    command: pnpm run test:storybook
    working_dir: /app/app

  server-test:
    build:
      context: .
      dockerfile: ./server/Dockerfile
      target: development
    volumes:
      - ./server:/app/server
      - ./common:/app/common
      - server_node_modules:/app/server/node_modules
      - common_node_modules:/app/common/node_modules
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/prettygood_test
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=test_secret
      - CORS_ORIGIN=*
    depends_on:
      - postgres
      - redis
    command: pnpm run test
    working_dir: /app/server

  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile
      target: development
    volumes:
      - ./server:/app/server
      - ./common:/app/common
      - server_node_modules:/app/server/node_modules
      - common_node_modules:/app/common/node_modules
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/prettygood_test
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=test_secret
      - CORS_ORIGIN=*
    depends_on:
      - postgres
      - redis
    working_dir: /app/server

  common-test:
    build:
      context: .
      dockerfile: ./common/Dockerfile
      target: development
    volumes:
      - ./common:/app/common
      - common_node_modules:/app/common/node_modules
    environment:
      - NODE_ENV=test
    command: pnpm run test
    working_dir: /app/common

  db-test:
    build:
      context: ./database/docker
      dockerfile: Dockerfile
    volumes:
      - ./database/tests:/app/tests
      - ./database/migrations:/app/migrations
    command: >
      bash -c "
        echo 'Running database migrations...' &&
        psql -U postgres -d prettygood_test -f /app/migrations/*.sql &&
        echo 'Running database tests...' &&
        psql -U postgres -d prettygood_test -f /app/tests/**/*.sql
      "
    depends_on:
      - postgres

  postgres:
    build:
      context: ./database/docker
      dockerfile: Dockerfile
    volumes:
      - ./database/tests:/app/tests
      - ./database/migrations:/app/migrations
    ports:
      - "5432:5432"
    tmpfs:
      - /var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    command: redis-server --save "" --appendonly no
    tmpfs:
      - /data

volumes:
  app_node_modules:
  server_node_modules:
  common_node_modules:
